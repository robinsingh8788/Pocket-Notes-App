{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lenovo\\\\Desktop\\\\note app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport { getGroups, saveGroups, getNotes, saveNotes } from './utils/storage';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [groups, setGroups] = useState([]);\n  const [selectedGroup, setSelectedGroup] = useState(null);\n  const [notes, setNotes] = useState([]);\n  const [newNote, setNewNote] = useState('');\n  const [showPopup, setShowPopup] = useState(false);\n  const [newGroupName, setNewGroupName] = useState('');\n  useEffect(() => {\n    const savedGroups = getGroups();\n    setGroups(savedGroups);\n  }, []);\n  useEffect(() => {\n    if (selectedGroup) {\n      const savedNotes = getNotes(selectedGroup);\n      setNotes(savedNotes);\n    }\n  }, [selectedGroup]);\n  const handleAddGroup = () => {\n    if (newGroupName.length < 2 || groups.includes(newGroupName)) return;\n    const updatedGroups = [...groups, newGroupName];\n    setGroups(updatedGroups);\n    saveGroups(updatedGroups);\n    setNewGroupName('');\n    setShowPopup(false);\n  };\n  const handleNoteSave = () => {\n    if (!newNote.trim()) return;\n    const now = new Date();\n    const newNoteObj = {\n      id: Date.now(),\n      content: newNote,\n      createdAt: now.toLocaleString(),\n      updatedAt: now.toLocaleString()\n    };\n    const updatedNotes = [...notes, newNoteObj];\n    setNotes(updatedNotes);\n    saveNotes(selectedGroup, updatedNotes);\n    setNewNote('');\n  };\n  function stringToColor(str) {\n    let hash = 0;\n    for (let i = 0; i < str.length; i++) {\n      hash = str.charCodeAt(i) + ((hash << 5) - hash);\n    }\n    const color = `hsl(${hash % 360}, 70%, 70%)`;\n    return color;\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sidebar\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Groups\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: groups.map((group, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: group === selectedGroup ? 'active' : '',\n          onClick: () => setSelectedGroup(group),\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"avatar\",\n            style: {\n              backgroundColor: stringToColor(group)\n            },\n            children: group.slice(0, 2).toUpperCase()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 15\n          }, this), group]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setShowPopup(true),\n        children: \"+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main\",\n      children: selectedGroup ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: selectedGroup\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"notes-display\",\n          children: notes.map(note => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"note\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: note.content\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n              children: [\"Created: \", note.createdAt]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n              children: [\"Updated: \", note.updatedAt]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 19\n            }, this)]\n          }, note.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"note-input\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Write a note...\",\n            value: newNote,\n            onChange: e => setNewNote(e.target.value),\n            onKeyDown: e => e.key === 'Enter' && handleNoteSave()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: newNote ? 'active' : '',\n            onClick: handleNoteSave,\n            children: \"\\u27A4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"placeholder\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"/welcome.png\",\n          alt: \"Welcome\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Pocket Notes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Send and receive messages without keeping your phone online.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Use Pocket Notes on up to 4 linked devices and 1 mobile phone\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            fontSize: \"12px\",\n            marginTop: \"10px\"\n          },\n          children: \"\\uD83D\\uDD12 end-to-end encrypted\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), showPopup && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"popup-overlay\",\n      onClick: () => setShowPopup(false),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"popup\",\n        onClick: e => e.stopPropagation(),\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Create New Group\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: newGroupName,\n          onChange: e => setNewGroupName(e.target.value),\n          placeholder: \"Group Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleAddGroup,\n          children: \"Create\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"3RymsKw5bBiLFVzGVETP51lviPk=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","getGroups","saveGroups","getNotes","saveNotes","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","groups","setGroups","selectedGroup","setSelectedGroup","notes","setNotes","newNote","setNewNote","showPopup","setShowPopup","newGroupName","setNewGroupName","savedGroups","savedNotes","handleAddGroup","length","includes","updatedGroups","handleNoteSave","trim","now","Date","newNoteObj","id","content","createdAt","toLocaleString","updatedAt","updatedNotes","stringToColor","str","hash","i","charCodeAt","color","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","group","onClick","style","backgroundColor","slice","toUpperCase","note","type","placeholder","value","onChange","e","target","onKeyDown","key","src","alt","fontSize","marginTop","stopPropagation","_c","$RefreshReg$"],"sources":["C:/Users/lenovo/Desktop/note app/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport { getGroups, saveGroups, getNotes, saveNotes } from './utils/storage';\n\nfunction App() {\n  const [groups, setGroups] = useState([]);\n  const [selectedGroup, setSelectedGroup] = useState(null);\n  const [notes, setNotes] = useState([]);\n  const [newNote, setNewNote] = useState('');\n  const [showPopup, setShowPopup] = useState(false);\n  const [newGroupName, setNewGroupName] = useState('');\n\n  useEffect(() => {\n    const savedGroups = getGroups();\n    setGroups(savedGroups);\n  }, []);\n\n  useEffect(() => {\n    if (selectedGroup) {\n      const savedNotes = getNotes(selectedGroup);\n      setNotes(savedNotes);\n    }\n  }, [selectedGroup]);\n\n  const handleAddGroup = () => {\n    if (newGroupName.length < 2 || groups.includes(newGroupName)) return;\n    const updatedGroups = [...groups, newGroupName];\n    setGroups(updatedGroups);\n    saveGroups(updatedGroups);\n    setNewGroupName('');\n    setShowPopup(false);\n  };\n\n  const handleNoteSave = () => {\n    if (!newNote.trim()) return;\n    const now = new Date();\n    const newNoteObj = {\n      id: Date.now(),\n      content: newNote,\n      createdAt: now.toLocaleString(),\n      updatedAt: now.toLocaleString(),\n    };\n    const updatedNotes = [...notes, newNoteObj];\n    setNotes(updatedNotes);\n    saveNotes(selectedGroup, updatedNotes);\n    setNewNote('');\n  };\n\nfunction stringToColor(str) {\n  let hash = 0;\n  for (let i = 0; i < str.length; i++) {\n    hash = str.charCodeAt(i) + ((hash << 5) - hash);\n  }\n  const color = `hsl(${hash % 360}, 70%, 70%)`;\n  return color;\n}\n\n\n  return (\n    <div className=\"app\">\n      <div className=\"sidebar\">\n        <h2>Groups</h2>\n        <ul>\n          {groups.map((group, i) => (\n            <li\n              key={i}\n              className={group === selectedGroup ? 'active' : ''}\n              onClick={() => setSelectedGroup(group)}>\n              <span className=\"avatar\" style={{ backgroundColor: stringToColor(group) }}>\n  {group.slice(0, 2).toUpperCase()}\n</span>\n\n              {group}\n            </li>\n          ))}\n        </ul>\n        <button onClick={() => setShowPopup(true)}>+</button>\n      </div>\n\n      <div className=\"main\">\n        {selectedGroup ? (\n          <>\n            <h2>{selectedGroup}</h2>\n            <div className=\"notes-display\">\n              {notes.map(note => (\n                <div key={note.id} className=\"note\">\n                  <p>{note.content}</p>\n                  <small>Created: {note.createdAt}</small>\n                  <small>Updated: {note.updatedAt}</small>\n                </div>\n              ))}\n            </div>\n            <div className=\"note-input\">\n              <input\n                type=\"text\"\n                placeholder=\"Write a note...\"\n                value={newNote}\n                onChange={e => setNewNote(e.target.value)}\n                onKeyDown={e => e.key === 'Enter' && handleNoteSave()}\n              />\n              <button\n                className={newNote ? 'active' : ''}\n                onClick={handleNoteSave}>\n                ➤\n              </button>\n            </div>\n          </>\n        ) : (\n          <div className=\"placeholder\">\n            <img src=\"/welcome.png\" alt=\"Welcome\" />\n            <h1>Pocket Notes</h1>\n            <p>Send and receive messages without keeping your phone online.</p>\n            <p>Use Pocket Notes on up to 4 linked devices and 1 mobile phone</p>\n            <p style={{ fontSize: \"12px\", marginTop: \"10px\" }}>🔒 end-to-end encrypted</p>\n          </div>\n        )}\n      </div>\n\n      {showPopup && (\n        <div className=\"popup-overlay\" onClick={() => setShowPopup(false)}>\n          <div className=\"popup\" onClick={e => e.stopPropagation()}>\n            <h3>Create New Group</h3>\n            <input\n              type=\"text\"\n              value={newGroupName}\n              onChange={e => setNewGroupName(e.target.value)}\n              placeholder=\"Group Name\"\n            />\n            <button onClick={handleAddGroup}>Create</button>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
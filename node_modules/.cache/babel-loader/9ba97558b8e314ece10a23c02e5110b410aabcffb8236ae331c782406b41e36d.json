{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lenovo\\\\Desktop\\\\note app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport { getGroups, saveGroups, getNotes, saveNotes } from './utils/storage';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [groups, setGroups] = useState([]);\n  const [selectedGroup, setSelectedGroup] = useState(null);\n  const [notes, setNotes] = useState([]);\n  const [newNote, setNewNote] = useState('');\n  const [showPopup, setShowPopup] = useState(false);\n  const [newGroupName, setNewGroupName] = useState('');\n  const [selectedColor, setSelectedColor] = useState('#f06292');\n  useEffect(() => {\n    const savedGroups = getGroups();\n    setGroups(savedGroups);\n  }, []);\n  useEffect(() => {\n    if (selectedGroup) {\n      const savedNotes = getNotes(selectedGroup);\n      setNotes(savedNotes);\n    }\n  }, [selectedGroup]);\n  const handleAddGroup = () => {\n    if (newGroupName.length < 2 || groups.includes(newGroupName)) return;\n    const updatedGroups = [...groups, newGroupName];\n    setGroups(updatedGroups);\n    saveGroups(updatedGroups);\n    const colorMap = JSON.parse(localStorage.getItem('group-color-map') || '{}');\n    colorMap[newGroupName] = selectedColor;\n    localStorage.setItem('group-color-map', JSON.stringify(colorMap));\n    setNewGroupName('');\n    setSelectedColor('#f06292');\n    setShowPopup(false);\n  };\n  const handleNoteSave = () => {\n    if (!newNote.trim()) return;\n    const now = new Date();\n    const newNoteObj = {\n      id: Date.now(),\n      content: newNote,\n      createdAt: now.toLocaleString(),\n      updatedAt: now.toLocaleString()\n    };\n    const updatedNotes = [...notes, newNoteObj];\n    setNotes(updatedNotes);\n    saveNotes(selectedGroup, updatedNotes);\n    setNewNote('');\n  };\n  function stringToColor(str) {\n    let hash = 0;\n    for (let i = 0; i < str.length; i++) {\n      hash = str.charCodeAt(i) + ((hash << 5) - hash);\n    }\n    const color = `hsl(${hash % 360}, 70%, 70%)`;\n    return color;\n  }\n  function getGroupColor(group) {\n    const colorMap = JSON.parse(localStorage.getItem('group-color-map') || '{}');\n    return colorMap[group] || stringToColor(group);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sidebar\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"sidebar-title\",\n        children: \"Pocket Notes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: groups.map((group, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: group === selectedGroup ? 'active' : '',\n          onClick: () => setSelectedGroup(group),\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"avatar\",\n            style: {\n              backgroundColor: getGroupColor(group)\n            },\n            children: group.slice(0, 2).toUpperCase()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 15\n          }, this), group]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setShowPopup(true),\n        children: \"+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main\",\n      children: selectedGroup ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: selectedGroup\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"notes-display\",\n          children: notes.map(note => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"note\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: note.content\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n              children: [\"Created: \", note.createdAt]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n              children: [\"Updated: \", note.updatedAt]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 19\n            }, this)]\n          }, note.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"note-input\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Write a note...\",\n            value: newNote,\n            onChange: e => setNewNote(e.target.value),\n            onKeyDown: e => e.key === 'Enter' && handleNoteSave()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: newNote ? 'active' : '',\n            onClick: handleNoteSave,\n            children: \"\\u27A4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"placeholder\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"/welcome.png\",\n          alt: \"Welcome\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Pocket Notes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Send and receive messages without keeping your phone online.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Use Pocket Notes on up to 4 linked devices and 1 mobile phone.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            fontSize: \"12px\",\n            marginTop: \"10px\"\n          },\n          children: \"\\uD83D\\uDD12 end-to-end encrypted\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), showPopup && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"popup-overlay\",\n      onClick: () => setShowPopup(false),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"popup\",\n        onClick: e => e.stopPropagation(),\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Create New Group\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            alignItems: 'flex-start',\n            marginBottom: '20px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            style: {\n              marginRight: '10px',\n              minWidth: '100px',\n              fontWeight: '500',\n              paddingTop: '10px'\n            },\n            children: \"Group Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 3\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: newGroupName,\n            onChange: e => setNewGroupName(e.target.value),\n            placeholder: \"Enter group name\",\n            style: {\n              padding: '10px',\n              fontSize: '14px',\n              borderRadius: '6px',\n              border: '1px solid #ccc',\n              flex: 1\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 3\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"color-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Choose colour\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 3\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"color-options\",\n            children: ['#f06292', '#ba68c8', '#64b5f6', '#4db6ac', '#ffd54f'].map(color => /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"color-dot\",\n              style: {\n                backgroundColor: color,\n                border: selectedColor === color ? '2px solid black' : '1px solid gray'\n              },\n              onClick: () => setSelectedColor(color)\n            }, color, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 7\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 3\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleAddGroup,\n          disabled: newGroupName.length < 2,\n          children: \"Create\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"rCPcvxE9MOXqNoJD6suRO+5SBe0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","getGroups","saveGroups","getNotes","saveNotes","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","groups","setGroups","selectedGroup","setSelectedGroup","notes","setNotes","newNote","setNewNote","showPopup","setShowPopup","newGroupName","setNewGroupName","selectedColor","setSelectedColor","savedGroups","savedNotes","handleAddGroup","length","includes","updatedGroups","colorMap","JSON","parse","localStorage","getItem","setItem","stringify","handleNoteSave","trim","now","Date","newNoteObj","id","content","createdAt","toLocaleString","updatedAt","updatedNotes","stringToColor","str","hash","i","charCodeAt","color","getGroupColor","group","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","onClick","style","backgroundColor","slice","toUpperCase","note","type","placeholder","value","onChange","e","target","onKeyDown","key","src","alt","fontSize","marginTop","stopPropagation","display","alignItems","marginBottom","marginRight","minWidth","fontWeight","paddingTop","padding","borderRadius","border","flex","disabled","_c","$RefreshReg$"],"sources":["C:/Users/lenovo/Desktop/note app/src/App.js"],"sourcesContent":["\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport { getGroups, saveGroups, getNotes, saveNotes } from './utils/storage';\n\nfunction App() {\n  const [groups, setGroups] = useState([]);\n  const [selectedGroup, setSelectedGroup] = useState(null);\n  const [notes, setNotes] = useState([]);\n  const [newNote, setNewNote] = useState('');\n  const [showPopup, setShowPopup] = useState(false);\n  const [newGroupName, setNewGroupName] = useState('');\n  const [selectedColor, setSelectedColor] = useState('#f06292');\n\n  useEffect(() => {\n    const savedGroups = getGroups();\n    setGroups(savedGroups);\n  }, []);\n\n  useEffect(() => {\n    if (selectedGroup) {\n      const savedNotes = getNotes(selectedGroup);\n      setNotes(savedNotes);\n    }\n  }, [selectedGroup]);\n\n  const handleAddGroup = () => {\n    if (newGroupName.length < 2 || groups.includes(newGroupName)) return;\n    const updatedGroups = [...groups, newGroupName];\n    setGroups(updatedGroups);\n    saveGroups(updatedGroups);\n\n    const colorMap = JSON.parse(localStorage.getItem('group-color-map') || '{}');\n    colorMap[newGroupName] = selectedColor;\n    localStorage.setItem('group-color-map', JSON.stringify(colorMap));\n\n    setNewGroupName('');\n    setSelectedColor('#f06292');\n    setShowPopup(false);\n  };\n\n  const handleNoteSave = () => {\n    if (!newNote.trim()) return;\n    const now = new Date();\n    const newNoteObj = {\n      id: Date.now(),\n      content: newNote,\n      createdAt: now.toLocaleString(),\n      updatedAt: now.toLocaleString(),\n    };\n    const updatedNotes = [...notes, newNoteObj];\n    setNotes(updatedNotes);\n    saveNotes(selectedGroup, updatedNotes);\n    setNewNote('');\n  };\n\n  function stringToColor(str) {\n    let hash = 0;\n    for (let i = 0; i < str.length; i++) {\n      hash = str.charCodeAt(i) + ((hash << 5) - hash);\n    }\n    const color = `hsl(${hash % 360}, 70%, 70%)`;\n    return color;\n  }\n\n  function getGroupColor(group) {\n    const colorMap = JSON.parse(localStorage.getItem('group-color-map') || '{}');\n    return colorMap[group] || stringToColor(group);\n  }\n\n  return (\n    <div className=\"app\">\n      <div className=\"sidebar\">\n        <h2 className=\"sidebar-title\">Pocket Notes</h2>\n        <ul>\n          {groups.map((group, i) => (\n            <li\n              key={i}\n              className={group === selectedGroup ? 'active' : ''}\n              onClick={() => setSelectedGroup(group)}>\n              <span className=\"avatar\" style={{ backgroundColor: getGroupColor(group) }}>\n                {group.slice(0, 2).toUpperCase()}\n              </span>\n              {group}\n            </li>\n          ))}\n        </ul>\n        <button onClick={() => setShowPopup(true)}>+</button>\n      </div>\n      \n      \n      <div className=\"main\">\n        {selectedGroup ? (\n          <>\n            <h2>{selectedGroup}</h2>\n            <div className=\"notes-display\">\n              {notes.map(note => (\n                <div key={note.id} className=\"note\">\n                  <p>{note.content}</p>\n                  <small>Created: {note.createdAt}</small>\n                  <small>Updated: {note.updatedAt}</small>\n                </div>\n              ))}\n            </div>\n            <div className=\"note-input\">\n              <input\n                type=\"text\"\n                placeholder=\"Write a note...\"\n                value={newNote}\n                onChange={e => setNewNote(e.target.value)}\n                onKeyDown={e => e.key === 'Enter' && handleNoteSave()}\n              />\n              <button className={newNote ? 'active' : ''} onClick={handleNoteSave}>➤</button>\n            </div>\n          </>\n        ) : (\n            <div className=\"placeholder\">\n        <img src=\"/welcome.png\" alt=\"Welcome\" />\n        <h1>Pocket Notes</h1>\n        <p>Send and receive messages without keeping your phone online.</p>\n        <p>Use Pocket Notes on up to 4 linked devices and 1 mobile phone.</p>\n        <p style={{ fontSize: \"12px\", marginTop: \"10px\" }}>🔒 end-to-end encrypted</p>\n      </div>\n    )}\n  </div>\n\n      {showPopup && (\n        <div className=\"popup-overlay\" onClick={() => setShowPopup(false)}>\n          <div className=\"popup\" onClick={e => e.stopPropagation()}>\n            <h3>Create New Group</h3>\n            <div style={{ display: 'flex', alignItems: 'flex-start', marginBottom: '20px' }}>\n  <label style={{ marginRight: '10px', minWidth: '100px', fontWeight: '500', paddingTop: '10px' }}>\n    Group Name\n  </label>\n  <input\n    type=\"text\"\n    value={newGroupName}\n    onChange={e => setNewGroupName(e.target.value)}\n    placeholder=\"Enter group name\"\n    style={{\n      padding: '10px',\n      fontSize: '14px',\n      borderRadius: '6px',\n      border: '1px solid #ccc',\n      flex: 1\n    }}\n  />\n</div>\n\n\n            <div className=\"color-row\">\n  <label>Choose colour</label>\n  <div className=\"color-options\">\n    {['#f06292', '#ba68c8', '#64b5f6', '#4db6ac', '#ffd54f'].map((color) => (\n      <span\n        key={color}\n        className=\"color-dot\"\n        style={{\n          backgroundColor: color,\n          border: selectedColor === color ? '2px solid black' : '1px solid gray'\n        }}\n        onClick={() => setSelectedColor(color)}\n      />\n    ))}\n  </div>\n</div>\n\n            <button onClick={handleAddGroup} disabled={newGroupName.length < 2}>Create</button>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}